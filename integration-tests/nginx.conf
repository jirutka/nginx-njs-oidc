error_log stderr info;

events {}

http {
  js_import oauth from ../dist/ngx-oauth.js;
  js_import test_hook from ../src/test-hook.js;

  resolver 193.17.47.1 185.43.135.1;

  proxy_cache_path users
    keys_zone=users:1m
    levels=2
    use_temp_path=off
    inactive=1d
    max_size=16m;

  proxy_cache_path tokens
    keys_zone=tokens:1m
    levels=2
    use_temp_path=off
    inactive=1h
    max_size=4m;

  # NOTE: This is only for testing, use keyval_zone_redis in production.
  keyval_zone zone=oidc_id_tokens:1M;
  keyval_zone zone=oidc_access_tokens:1M;
  keyval_zone zone=oidc_refresh_tokens:1M;

  # Initial session creation for the ID token.
  keyval $request_id $oidc_id_token_new zone=oidc_id_tokens;
  # Exchange the oidc_session_id cookie for the ID token.
  keyval $cookie_oidc_session_id $oidc_id_token zone=oidc_id_tokens;

  # Initial session creation for the access token.
  keyval $request_id $oidc_access_token_new zone=oidc_access_tokens;
  # Exchange the oidc_session_id cookie for the access token.
  keyval $cookie_oidc_session_id $oidc_access_token zone=oidc_access_tokens;

  # Initial session creation for the refresh token.
  keyval $request_id $oidc_refresh_token_new zone=oidc_refresh_tokens;
  # Exchange the oidc_session_id cookie for the refresh token.
  keyval $cookie_oidc_session_id $oidc_refresh_token zone=oidc_refresh_tokens;

  server {
    listen __ADDRESS__:__PORT__ ssl;

    ssl_certificate "fixtures/server.crt";
    ssl_certificate_key "fixtures/server.key";

    root __CONFDIR__/fixtures/www;
    index index.html;

    proxy_connect_timeout 5s;
    proxy_read_timeout 5s;

    set $oauth_issuer "http://localhost:__PORT_1__";
    set $oauth_server_url "http://$host:__PORT_1__";
    set $oauth_jwks_file "__CONFDIR__/fixtures/jwks.json";
    set $oauth_client_id "oauth-proxy";
    set $oauth_client_secret "top-secret";
    set $oauth_scope "openid profile";
    set $oauth_redirect_uri "https://$host:$server_port/-/oauth/callback";
    set $oauth_cookie_path "/";
    set $oauth_cookie_max_age "2592000";
    set $oauth_insecure false;
    set $oauth_log_level "debug";
    set $oauth_cache_zone_tokens "tokens";
    set $oauth_cache_zone_users "users";

    location / {
    }

    location /secured/ {
      #rewrite ^/$ /@master/ break;
      #rewrite ^/([^@].*) /@master/$1 break;

      include ../conf/auth-access.conf;
    }

    location /proxy/ {
      include ../conf/auth-proxy.conf;

      rewrite ^/proxy/(.*)$ /$1 break;
      proxy_pass "http://$host:__PORT_2__";
    }

    include ../conf/locations.conf;

    location /test-hook/variables/ {
      js_content test_hook.variables;
    }

    location = /-/internal/user {
      internal;

      proxy_pass_request_body off;
      proxy_pass_request_headers off;
      proxy_set_header Authorization "Bearer $arg_access_token";
      proxy_set_header Accept application/json;
      proxy_pass https://kosapi.fit.cvut.cz/usermap/v1/people/$arg_username;

      proxy_cache $oauth_cache_zone_users;
      proxy_cache_valid 200 1h;
      proxy_cache_valid 404 1m;
      proxy_cache_key $arg_username;
      # Don't allow simultaneous requests for same username.
      proxy_cache_lock on;
      # If the last request passed to the server has not completed for the specified time,
      # one more request may be passed.
      proxy_cache_lock_age 2s;
      # Use stale responses if we cannot reach the server.
      proxy_cache_use_stale error timeout http_502 http_503 http_504;
      # Update an expired cache item, while a stale cached response is returned to the client.
      proxy_cache_background_update on;
      # Ignore caching headers (Umapi sends no-cache).
      proxy_ignore_headers Cache-Control Expires;
    }

    # This is used just for nginx-testing.
    location = /health {
      return 200;
    }
  }
}
