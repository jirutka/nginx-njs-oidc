location = /-/oauth/login {
  js_content oauth.login;
}

location = /-/oauth/logout {
  js_content oauth.logout;
}

location = /-/oauth/callback {
  js_content oauth.callback;
}

location = /-/internal/auth-access {
  internal;
  js_content oauth.auth_access;
}

location = /-/internal/auth-pages {
  internal;
  js_content oauth.auth_pages;
}

location = /-/internal/auth-proxy {
  internal;
  js_content oauth.auth_proxy;
}

location = /-/internal/error {
  internal;
  js_content oauth.error;
}

location = /-/internal/request-token {
  internal;

  set_encode_base64 $auth_credentials "$oauth_client_id:$oauth_client_secret";
  proxy_set_header Authorization "Basic $auth_credentials";
  proxy_set_header Accept application/json;
  proxy_set_header Content-Type "application/x-www-form-urlencoded";

  proxy_pass "$oauth_server_url/token";

  proxy_pass_request_headers off;

  proxy_cache $oauth_cache_zone_tokens;
  proxy_cache_methods POST;
  proxy_cache_valid 200 30s;
  proxy_cache_key $args;
  # Don't allow simultaneous requests for same token.
  proxy_cache_lock on;
  # If the last request passed to the server has not completed for the specified time,
  # one more request may be passed.
  proxy_cache_lock_age 2s;
  # Ignore caching headers (OAAS sends no-cache).
  proxy_ignore_headers Cache-Control Expires;
}

location = /-/internal/check-token {
  internal;

  set_encode_base64 $auth_credentials "$oauth_client_id:$oauth_client_secret";
  proxy_set_header Authorization "Basic $auth_credentials";
  proxy_set_header Accept application/json;

  proxy_pass_request_body off;
  proxy_pass_request_headers off;
  proxy_pass "$oauth_server_url/check_token?token=$arg_token";

  proxy_cache $oauth_cache_zone_tokens;
  proxy_cache_methods POST;
  proxy_cache_valid 200 10m;
  proxy_cache_valid 400 404 1m;
  proxy_cache_key $arg_token;
  # Don't allow simultaneous requests for same token.
  proxy_cache_lock on;
  # If the last request passed to the server has not completed for the specified time,
  # one more request may be passed.
  proxy_cache_lock_age 2s;
  # Use stale responses if we cannot reach the server.
  proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
  # Ignore caching headers (OAAS sends no-cache).
  proxy_ignore_headers Cache-Control Expires;
}
